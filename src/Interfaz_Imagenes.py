# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'subirFotos.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#pip3 install pyrebase4
#pip install opencv-python
#pip install imutils


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox
from PyQt5.QtGui import QImage
import cv2
import imutils

import pyrebase

config = {
    "apiKey": "AIzaSyAcXjtVOWvZmFH5jzT9ErMBk7W35ve3zU4",
    "authDomain": "evently-646a2.firebaseapp.com",
    "databaseURL": "https://evently-646a2-default-rtdb.firebaseio.com",
    "projectId": "evently-646a2",
    "storageBucket": "evently-646a2.appspot.com",
    "messagingSenderId": "906232807040",
    "appId": "1:906232807040:web:79d5b6f0faea348d647065",
    "measurementId": "G-7SBMVQG52S"
}

firebase = pyrebase.initialize_app(config)


class Interfaz_Imagenes(object):
    
    imagen = QImage()
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(510, 362)
        MainWindow.setStyleSheet("\n"
"background-color: rgb(219, 175, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_Seleccionar_Imagen = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Seleccionar_Imagen.setGeometry(QtCore.QRect(330, 80, 161, 41))
        self.pushButton_Seleccionar_Imagen.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_Seleccionar_Imagen.setObjectName("pushButton_Seleccionar_Imagen")
        self.pushButton_Cancelar = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Cancelar.setGeometry(QtCore.QRect(330, 180, 161, 41))
        self.pushButton_Cancelar.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_Cancelar.setObjectName("pushButton_Cancelar")
        self.label_Foto = QtWidgets.QLabel(self.centralwidget)
        self.label_Foto.setGeometry(QtCore.QRect(10, 30, 311, 271))
        self.label_Foto.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_Foto.setText("")
        self.label_Foto.setObjectName("label_Foto")
        self.pushButton_Subir_Imagen = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Subir_Imagen.setGeometry(QtCore.QRect(330, 130, 161, 41))
        self.pushButton_Subir_Imagen.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_Subir_Imagen.setObjectName("pushButton_Subir_Imagen")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 510, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")

        self.retranslateUi(MainWindow)
        self.pushButton_Seleccionar_Imagen.clicked.connect(self.cargarImagen)
        self.pushButton_Cancelar.clicked.connect(self.label_Foto.clear)
        self.pushButton_Subir_Imagen.clicked.connect(self.botonSubirImagen)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
    def cargarImagen(self):
        self.file_name = QFileDialog.getOpenFileName(filter="Imagen (*.*)")[0]
        self.image = cv2.imread(self.file_name)
        print(self.file_name)
        self.setImagen(self.image)
       
    def setImagen(self, image):
        self.tmp = image
        image = imutils.resize(image, width=640)
        frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
        self.label_Foto.setPixmap(QtGui.QPixmap.fromImage(image))
        print(image)
        self.imagen = image
        print(self.imagen)
        
    def subirImagen(self, image):
        indice_separador = image.rfind("/")
        nombre_fichero = image[indice_separador+1 : ]
        storage = firebase.storage()
        storage.child("imagenes/" + str(nombre_fichero)).put(image)
        self.show_popup_imagen_subida()
        
    def botonSubirImagen(self):
        if hasattr(self, 'file_name'):
            self.subirImagen(self.file_name)
        else:
            self.aviso_imagen_no_seleccionada()
        
    def show_popup_imagen_subida(self):
        msg = QMessageBox()
        msg.setWindowTitle("EVENTLY")
        msg.setText("Imagen subida correctamente.")
        
        x = msg.exec_()
        
    def aviso_imagen_no_seleccionada(self):
        msg = QMessageBox()
        msg.setWindowTitle("EVENTLY")
        msg.setText("No hay ninguna imagen seleccionada.")
        
        x = msg.exec_()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_Seleccionar_Imagen.setText(_translate("MainWindow", "Seleccionar imagen"))
        self.pushButton_Cancelar.setText(_translate("MainWindow", "Cancelar"))
        self.pushButton_Subir_Imagen.setText(_translate("MainWindow", "Subir imagen"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Interfaz_Imagenes()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
